#!/bin/sh

uci set luci.main.lang=zh_cn
uci set luci.main.mediaurlbase=/luci-static/argon
uci commit luci

uci set system.@system[0].hostname=OprX
uci set system.@system[0].timezone=CST-8
uci set system.@system[0].zonename=Asia/Shanghai
uci -q del system.ntp.server
uci -q add_list system.ntp.server='ntp1.aliyun.com'
uci -q add_list system.ntp.server='ntp.tencent.com'
uci -q add_list system.ntp.server='ntp.ntsc.ac.cn'
uci -q add_list system.ntp.server='time.apple.com'
uci commit system

uci set fstab.@global[0].anon_mount=1
uci commit fstab

uci set uhttpd.main.redirect_https='0'
uci commit uhttpd

ln -sf /sbin/ip /usr/bin/ip

#3uci set network.lan.ipaddr="192.168.8.1"
#uci set network.lan.netmask='255.255.255.0'
#uci set network.lan.dns='127.0.0.1'
#uci commit network

uci set upnpd.config.enabled='1'
uci set upnpd.config.external_iface="wan"
uci commit upnpd

rm -f /usr/lib/lua/luci/view/admin_status/index/mwan.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/upnp.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/ddns.htm
rm -f /usr/lib/lua/luci/view/admin_status/index/minidlna.htm


#删除首页多余展示页面
rm -f /www/luci-static/resources/view/status/include/25_storage.js
rm -f /www/luci-static/resources/view/status/include/29_ports.js
rm -f /www/luci-static/resources/view/status/include/29_ethinfo.js
rm -f /www/luci-static/resources/view/status/include/50_dsl.js
rm -f /www/luci-static/resources/view/status/include/70_ddns.js
rm -f /www/luci-static/resources/view/status/include/80_minidlna.js
rm -f /www/luci-static/resources/view/status/include/80_upnp.js

sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/aria2.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/aria2/overview_status.htm
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/hd_idle.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/samba.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/samba4.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/minidlna.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/transmission.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/mjpg-streamer.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/p910nd.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/usb_printer.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/xunlei.lua
sed -i 's/services/nas/g'  /usr/lib/lua/luci/view/minidlna_status.htm
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/nfs.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/cifs.lua
sed -i 's/\"services\"/\"nas\"/g' /usr/lib/lua/luci/controller/qbittorrent.lua

sed -i 's#downloads.openwrt.org#mirrors.cloud.tencent.com/lede#g' /etc/opkg/distfeeds.conf
#sed -i 's#downloads.openwrt.org#mirrors.tuna.tsinghua.edu.cn/openwrt#g' /etc/opkg/distfeeds.conf
sed -i 's/root::0:0:99999:7:::/root:$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.:0:0:99999:7:::/g' /etc/shadow
sed -i 's/root:::0:99999:7:::/root:$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.:0:0:99999:7:::/g' /etc/shadow

#获取/usr/lib/opkg/info/kernel.control中的第二行“Version: 6.1.76-1-6845aa9a30f20a242bd9b8aa42d8e480”中的6.1.76-1-6845aa9a30f20a242bd9b8aa42d8e480
#sed -i "/openwrt_core/c\src/gz openwrt_core https://raw.cooluc.com/ilxp/lede-kmod-x86_64/main/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
#sed -i "/openwrt_core/c\src/gz openwrt_core https://raw.gitmirror.com/ilxp/lede-kmod-x86_64/main/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
#sed -i "/openwrt_core/c\src/gz openwrt_core https://ghfast.top/raw.githubusercontent.com/ilxp/eS-kmod-x86_64/main/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf


sed -i '/openwrt_core/d' /etc/opkg/distfeeds.conf
#sed -i "\$a\src/gz openwrt_core https://ghfast.top/raw.githubusercontent.com/ilxp/oprx-es_core/x86_64/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
#sed -i "\$a\src/gz openwrt_core https://gh-proxy.com/raw.githubusercontent.com/ilxp/oprx-es_core/x86_64/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf
sed -i "\$a\src/gz openwrt_core https://raw.kkgithub.com/ilxp/oprx-es_core/x86_64/$(grep Version /usr/lib/opkg/info/kernel.control | awk '{print $2}')" /etc/opkg/distfeeds.conf

sed -i "s/# //g" /etc/opkg/distfeeds.conf
sed -i '/openwrt_luci/ { s/snapshots/releases\/18.06.9/g; }'  /etc/opkg/distfeeds.conf

# extra packages
echo "src/gz openwrt_extras https://opkg.cooluc.com/openwrt-24.10/$(. /etc/openwrt_release ; echo $DISTRIB_ARCH)" >> /etc/opkg/distfeeds.conf

# disable coremark
sed -i '/coremark/d' /etc/crontabs/root
crontab /etc/crontabs/root


#注释掉软件包的默认的源
#sed -i 's/src\/gz/\#src\/gz/g' /etc/opkg/distfeeds.conf

#sed -i '/check_signature/d' /etc/opkg.conf


#sed -i '/REDIRECT --to-ports 53/d' /etc/firewall.user
echo '#允许本机的53端口可对外访问' >> /etc/firewall.user
echo '#iptables -A INPUT -p udp -m udp --dport 53 -j ACCEPT' >> /etc/firewall.user
echo '#iptables -A INPUT -p tcp -m tcp --dport 53 -j ACCEPT' >> /etc/firewall.user

#来源https://github.com/Hyy2001X/AutoBuild-Actions-BETA/blob/master/Scripts/AutoBuild_DiyScript.sh
#if [ -z "\$(grep "REDIRECT --to-ports 53" /etc/firewall.user 2> /dev/null)" ]
#then
	echo '# iptables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53' >> /etc/firewall.user
	echo '# iptables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53' >> /etc/firewall.user
	echo '# [ -n "\$(command -v ip6tables)" ] && ip6tables -t nat -A PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 53' >> /etc/firewall.user
	echo '# [ -n "\$(command -v ip6tables)" ] && ip6tables -t nat -A PREROUTING -p tcp --dport 53 -j REDIRECT --to-ports 53' >> /etc/firewall.user
	echo 'iptables -t mangle -A PREROUTING -i pppoe -p icmp --icmp-type destination-unreachable -j DROP' >> /etc/firewall.user
	echo 'iptables -t mangle -A PREROUTING -i pppoe -p tcp -m tcp --tcp-flags ACK,RST RST -j DROP' >> /etc/firewall.user
	echo 'iptables -t mangle -A PREROUTING -i pppoe -p tcp -m tcp --tcp-flags PSH,FIN PSH,FIN -j DROP' >> /etc/firewall.user
	echo '[ -n "\$(command -v ip6tables)" ] && ip6tables -t mangle -A PREROUTING -i pppoe -p tcp -m tcp --tcp-flags PSH,FIN PSH,FIN -j DROP' >> /etc/firewall.user
	echo '[ -n "\$(command -v ip6tables)" ] && ip6tables -t mangle -A PREROUTING -i pppoe -p ipv6-icmp --icmpv6-type destination-unreachable -j DROP' >> /etc/firewall.user
	echo '[ -n "\$(command -v ip6tables)" ] && ip6tables -t mangle -A PREROUTING -i pppoe -p tcp -m tcp --tcp-flags ACK,RST RST -j DROP' >> /etc/firewall.user
#fi

# 开启流量转发功能
#echo '1' >> /proc/sys/net/ipv4/ip_forward
#echo '1' >> /proc/sys/net/ipv6/ip_forward

#dnsmasq 设置以及开启 IPv6
uci set dhcp.lan.ra='server'
uci set dhcp.lan.dhcpv6='server'
uci set dhcp.lan.ra_management='1'
uci set dhcp.lan.ra_default='1'

#以下
uci set dnsmasq.filter_aaaa='0' #开启解析ipv6
#uci -q add_list dnsmasq.server='127.0.0.1#6053'
#uci del dnsmasq.cachesize
#uci del dnsmasq.noresolv
#uci set dhcp.@dnsmasq[0].cachesize=0
#uci set dhcp.@dnsmasq[0].noresolv=1
#uci set dhcp.@dnsmasq[0].nohosts=1  #新增加一个选项
uci commit dhcp
sed -i '/log-facility/d' /etc/dnsmasq.conf
echo "log-facility=/dev/null" >> /etc/dnsmasq.conf

sed -i '/option disabled/d' /etc/config/wireless
sed -i '/set wireless.radio${devidx}.disabled/d' /lib/wifi/mac80211.sh

#sed -i '/DISTRIB_REVISION/d' /etc/openwrt_release
#echo "DISTRIB_REVISION='R21.12.1'" >> /etc/openwrt_release
#sed -i '/DISTRIB_DESCRIPTION/d' /etc/openwrt_release
#echo "DISTRIB_DESCRIPTION='OneWRT '" >> /etc/openwrt_release

sed -i 's/OpenWrt/OprX/g' /etc/openwrt_release

sed -i '/log-facility/d' /etc/dnsmasq.conf
echo "log-facility=/dev/null" >> /etc/dnsmasq.conf

echo 'hsts=0' > /root/.wgetrc

#禁用Docker自动启动
uci set dockerd.globals.auto_start='0'
uci commit dockerd

#禁用wrtbwmon自动启动
uci del wrtbwmon.general.enabled
uci commit wrtbwmon

# Disable opkg signature check
sed -i 's/option check_signature/# option check_signature/g' /etc/opkg.conf

# 禁用ipv6前缀
sed -i 's/^[^#].*option ula/#&/' /etc/config/network

# Disable autostart by default for some packages
cd /etc/rc.d
rm -f S98udptools || true
rm -f S99nft-qos || true

# Try to execute init.sh (if exists)
if [ ! -f "/boot/init.sh" ]; then
bash /boot/init.sh
fi

#禁用某些可能会自启动且用不上的依赖包服务
/etc/init.d/php7-fastcgi disable 2>/dev/null
/etc/init.d/php7-fastcgi stop
/etc/init.d/php7-fpm disable 2>/dev/null
/etc/init.d/php7-fpm stop
/etc/init.d/php8-fastcgi disable 2>/dev/null
/etc/init.d/php8-fastcgi stop
/etc/init.d/php8-fpm disable 2>/dev/null
/etc/init.d/php8-fpm stop
/etc/init.d/softethervpnbridge disable 2>/dev/null
/etc/init.d/softethervpnbridge stop
/etc/init.d/softethervpnserver disable 2>/dev/null
/etc/init.d/softethervpnserver stop
/etc/init.d/softethervpnclient disable 2>/dev/null
/etc/init.d/softethervpnclient stop
/etc/init.d/haproxy disable 2>/dev/null
/etc/init.d/haproxy stop
/etc/init.d/kcptun disable 2>/dev/null
/etc/init.d/kcptun stop
/etc/init.d/socat disable 2>/dev/null
/etc/init.d/socat stop
/etc/init.d/fa-rk3399-pwmfan disable 2>/dev/null
/etc/init.d/fa-rk3399-pwmfan stop
/etc/init.d/fa-rk3328-pwmfan disable 2>/dev/null
/etc/init.d/fa-rk3328-pwmfan stop
#/etc/init.d/ttyd disable 2>/dev/null
#/etc/init.d/ttyd stop
/etc/init.d/shortcut-fe disable 2>/dev/null
/etc/init.d/shortcut-fe stop
/etc/init.d/qemu-ga disable 2>/dev/null
/etc/init.d/qemu-ga stop
#/etc/init.d/dnsproxy disable 2>/dev/null
#/etc/init.d/dnsproxy stop
#/etc/init.d/dockerd disable 2>/dev/null
/etc/init.d/dockerd stop
/etc/init.d/mwan3 disable 2>/dev/null

#--------以下设置是能考来源https://github.com/wukongdaily/AutoBuildImmortalWrt/blob/master/files/etc/uci-defaults/99-custom.sh

# 设置默认防火墙规则，方便虚拟机首次访问 WebUI
uci set firewall.@zone[1].input='ACCEPT'

# 设置主机名映射，解决安卓原生 TV 无法联网的问题
uci add dhcp domain
uci set "dhcp.@domain[-1].name=time.android.com"
uci set "dhcp.@domain[-1].ip=203.107.6.88"

# 计算网卡数量
count=0
ifnames=""
for iface in /sys/class/net/*; do
  iface_name=$(basename "$iface")
  # 检查是否为物理网卡（排除回环设备和无线设备）
  if [ -e "$iface/device" ] && echo "$iface_name" | grep -Eq '^eth|^en'; then
    count=$((count + 1))
    ifnames="$ifnames $iface_name"
  fi
done
# 删除多余空格
ifnames=$(echo "$ifnames" | awk '{$1=$1};1')

# 网络设置
if [ "$count" -eq 1 ]; then
   # 单网口设备 类似于NAS模式 动态获取ip模式 具体ip地址取决于上一级路由器给它分配的ip 也方便后续你使用web页面设置旁路由
   # 单网口设备 不支持修改ip 不要在此处修改ip 
   uci set network.lan.proto='dhcp'
elif [ "$count" -gt 1 ]; then
   # 提取第一个接口作为WAN
   wan_ifname=$(echo "$ifnames" | awk '{print $1}')
   # 剩余接口保留给LAN
   lan_ifnames=$(echo "$ifnames" | cut -d ' ' -f2-)
   # 设置WAN接口基础配置
   uci set network.wan=interface
   # 提取第一个接口作为WAN
   uci set network.wan.device="$wan_ifname"
   # WAN接口默认DHCP
   uci set network.wan.proto='dhcp'
   # 设置WAN6绑定网口eth0
   uci set network.wan6=interface
   uci set network.wan6.device="$wan_ifname"
   # 更新LAN接口成员
   # 查找对应设备的section名称
   section=$(uci show network | awk -F '[.=]' '/\.@?device\[\d+\]\.name=.br-lan.$/ {print $2; exit}')
   if [ -z "$section" ]; then
      echo "error：cannot find device 'br-lan'." >> $LOGFILE
   else
      # 删除原来的ports列表
      uci -q delete "network.$section.ports"
      # 添加新的ports列表
      for port in $lan_ifnames; do
         uci add_list "network.$section.ports"="$port"
      done
      echo "ports of device 'br-lan' are update." >> $LOGFILE
   fi
   # LAN口设置静态IP
   uci set network.lan.proto='static'
   # 多网口设备 支持修改为别的ip地址
   uci set network.lan.ipaddr='192.168.8.1'
   uci set network.lan.netmask='255.255.255.0'
   echo "set 192.168.8.1 at $(date)" >> $LOGFILE
fi


# 设置所有网口可访问网页终端
#uci delete ttyd.@ttyd[0].interface

# 设置所有网口可连接 SSH  #会导致登陆密码失效，无法登陆
#uci set dropbear.@dropbear[0].Interface=''

uci commit
#----------结束-----


chmod 0755 /etc/init.d/*
#chmod 0755 /etc/init.d/netdata
[ -f /etc/init.d/netdata ] && chmod +x /etc/init.d/netdata

rm -rf /tmp/luci-modulecache/
rm -f /tmp/luci-indexcache

exit 0
